[manifest]
    dump_lua = true
    priority = -1
    version  = "1.0.0"

#Adds Birthday Cake to cryptid's override file to get it to work like Crustulum
[[patches]]
    [patches.pattern]
        match_indent = true
        pattern = '''if next(find_joker("cry-crustulum")) or G.GAME.current_round.free_rerolls > 0 then'''
        payload = '''	if next(find_joker("j_asc_b_cake")) or G.GAME.current_round.free_rerolls > 0 then
		G.GAME.current_round.reroll_cost = 0
		return
	end'''
        position = "before"
        target = '''=[SMODS Cryptid "lib/overrides.lua"]'''

        #Adds Insanity Mode!!! functionality to cryptid's gateway

[[patches]]
    [patches.pattern]
        match_indent = true
        pattern = '''return #Cryptid.advanced_find_joker(nil, nil, nil, { "eternal" }, true, "j") < G.jokers.config.card_limit'''
        payload = '''if not asc_config["Insanity Mode!!!"] or false then
				return #Cryptid.advanced_find_joker(nil, nil, nil, { "eternal" }, true, "j")
					< to_number(G.jokers.config.card_limit)
			else
				return #G.jokers.cards
					< to_number(G.jokers.config.card_limit)
			end
		'''
        position = "at"
        target = '''=[SMODS Cryptid "items/exotic.lua"]'''

[[patches]]
    [patches.pattern]
        match_indent = true
        pattern      = '''if not SMODS.is_eternal(v) then'''
        payload      = '''if not SMODS.is_eternal(v) and not asc_config["Insanity Mode!!!"] or false then'''
        position     = "at"
        target       = '''=[SMODS Cryptid "items/exotic.lua"]'''

#If astronomica is installed
[[patches]]
    [patches.pattern]
        match_indent = true
        pattern      = '''if not v.ability.eternal then'''
        payload      = '''if not SMODS.is_eternal(v) and not asc_config["Insanity Mode!!!"] or false then'''
        position     = "at"
        target       = '''=[SMODS Astronomica "items/lib.lua"]'''


#Adds the Ascensionable tooltip to all ascensionable jokers. Thank you hexacryonic for the code.
[[patches]]
    [patches.pattern]
        match_indent = true
        pattern = "for _, v in ipairs(info_queue) do"
        payload = '''for k, _ in pairs(Ascensionable) do
  if _c.key == k then
    info_queue[#info_queue+1] = {key = 'asc_ascensionable', set = 'Other'}
  end
end
'''
        position = "before"
        target = "functions/common_events.lua"

#Adds the Apothable tooltip to all apothable jokers. Thank you hexacryonic for the code.
[[patches]]
    [patches.pattern]
        match_indent = true
        pattern = "for _, v in ipairs(info_queue) do"
        payload = '''for k, _ in pairs(Apothable) do
  if _c.key == k and next(SMODS.find_mod("entr")) then
    info_queue[#info_queue+1] = {key = 'asc_apothable', set = 'Other'}
  end
end
'''
        position = "before"
        target = "functions/common_events.lua"

#Allows Four finger exotic's extra cards to give ascension power.
[[patches]]
    [patches.pattern]
        match_indent = true
        pattern      = '''["Straight"] = next(SMODS.find_card("j_four_fingers")) and Cryptid.gameset() ~= "modest" and 4 or 5,'''
        payload      = '''["Straight"] = next(SMODS.find_card("j_asc_four_fingers")) and 2 or next(SMODS.find_card("j_four_fingers")) and Cryptid.gameset() ~= "modest" and 4 or 5,'''
        position     = "at"
        target       = '=[SMODS Cryptid "lib/ascended.lua"]'

[[patches]]
    [patches.pattern]
        match_indent = true
        pattern      = '''["Flush"] = next(SMODS.find_card("j_four_fingers")) and Cryptid.gameset() ~= "modest" and 4 or 5,'''
        payload      = '''["Flush"] = next(SMODS.find_card("j_asc_four_fingers")) and 2 or next(SMODS.find_card("j_four_fingers")) and Cryptid.gameset() ~= "modest" and 4 or 5,'''
        position     = "at"
        target       = '=[SMODS Cryptid "lib/ascended.lua"]'

[[patches]]
    [patches.pattern]
        match_indent = true
        pattern      = '''["Straight Flush"] = next(SMODS.find_card("j_four_fingers")) and Cryptid.gameset() ~= "modest" and 4 or 5, --debatable'''
        payload      = '''["Straight Flush"] = next(SMODS.find_card("j_asc_four_fingers")) and 2 or next(SMODS.find_card("j_four_fingers")) and Cryptid.gameset() ~= "modest" and 4 or 5,'''
        position     = "at"
        target       = '=[SMODS Cryptid "lib/ascended.lua"]'

