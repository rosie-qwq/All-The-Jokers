SMODS.Consumable({
    key = 'brutal_orchestra',
    set = 'travel',
    atlas = 'consumables',
    pos = {
        x = 0,
        y = 3
    },
    discovered = false,
    config = {max_highlighted = 1},
    keep_on_use = function(self, card)
        return false
    end,
    loc_vars = function(self, info_queue)
        info_queue[#info_queue + 1] = {set = 'Other', key = 'red_seal'}
        info_queue[#info_queue + 1] = {set = 'Other', key = 'blue_seal'}
        info_queue[#info_queue + 1] = {set = 'Other', key = 'purple_seal'}
        info_queue[#info_queue + 1] = {set = 'Other', key = 'gold_seal'}
        return {
            vars = {self.config.max_highlighted}
        }
    end,
    cost = 3,
    can_use = function(self, card)
        return #G.hand.highlighted <= card.ability.max_highlighted and #G.hand.highlighted >= 1
    end,

    use = function(self, card, area, copier)

        for i=1, #G.hand.highlighted do
            
            G.E_MANAGER:add_event(Event({
                trigger = 'after',
                delay = 1,
                func = function()
                    play_sound('tarot1')
                    local random_seal = SMODS.poll_seal({guaranteed = true, options = {'Red','Blue','Gold','Purple'}})
                    G.hand.highlighted[i]:set_seal(random_seal,false, true)
                    delay(0.5)
                    return true
                end
            }))
           
           
        end
    end
})
