[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''(G.GAME.used_vouchers["v_retcon"] or G.GAME.used_vouchers["v_directors_cut"]) and'''
position = 'at'
payload = '''(G.GAME.used_vouchers["v_retcon"] or G.GAME.used_vouchers["v_directors_cut"] or #SMODS.find_card('j_phanta_clapperboard') > 0) and'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
pattern = '''(G.GAME.used_vouchers["v_retcon"] or'''
position = 'after'
payload = '''#SMODS.find_card('j_phanta_clapperboard') > 0 or'''
match_indent = true



[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''if v:is_suit(kk) then mod_suit_counts[kk] = mod_suit_counts[kk] + 1 end'''
position = 'at'
payload = '''if v:is_suit(kk, nil, nil, true) then mod_suit_counts[kk] = mod_suit_counts[kk] + 1 end'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''mod_suit_tallies['Spades'] = (mod_suit_tallies['Spades'] or 0) + (v:is_suit('Spades') and 1 or 0)'''
position = 'at'
payload = '''mod_suit_tallies['Spades'] = (mod_suit_tallies['Spades'] or 0) + (v:is_suit('Spades', nil, nil, true) and 1 or 0)'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''mod_suit_tallies['Hearts'] = (mod_suit_tallies['Hearts'] or 0) + (v:is_suit('Hearts') and 1 or 0)'''
position = 'at'
payload = '''mod_suit_tallies['Hearts'] = (mod_suit_tallies['Hearts'] or 0) + (v:is_suit('Hearts', nil, nil, true) and 1 or 0)'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''mod_suit_tallies['Clubs'] = (mod_suit_tallies['Clubs'] or 0) + (v:is_suit('Clubs') and 1 or 0)'''
position = 'at'
payload = '''mod_suit_tallies['Clubs'] = (mod_suit_tallies['Clubs'] or 0) + (v:is_suit('Clubs', nil, nil, true) and 1 or 0)'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''mod_suit_tallies['Diamonds'] = (mod_suit_tallies['Diamonds'] or 0) + (v:is_suit('Diamonds') and 1 or 0)'''
position = 'at'
payload = '''mod_suit_tallies['Diamonds'] = (mod_suit_tallies['Diamonds'] or 0) + (v:is_suit('Diamonds', nil, nil, true) and 1 or 0)'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'cardarea.lua'
pattern = '''if v.facing == 'back' then'''
position = 'at'
payload = '''if v.facing == 'back' or v:is_suit("phanta_unknown", nil, nil, true) then'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = '''if G.GAME.dollars >= 5 and not G.GAME.modifiers.no_interest then'''
position = 'before'
payload = '''local moneybags = next(SMODS.find_card("j_phanta_mrbigmoneybags"))'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = '''if G.GAME.dollars >= 5 and not G.GAME.modifiers.no_interest then'''
position = 'at'
payload = '''if (G.GAME.dollars >= 5 or moneybags) and not G.GAME.modifiers.no_interest then'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = '''add_round_eval_row({bonus = true, name='interest', pitch = pitch, dollars = G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5)})'''
position = 'at'
payload = '''add_round_eval_row({bonus = true, name='interest', pitch = pitch, dollars = G.GAME.interest_amount*(moneybags and G.GAME.interest_cap/5 or math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5))})'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = '''if G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5) == G.GAME.interest_amount*G.GAME.interest_cap/5 then'''
position = 'at'
payload = '''if moneybags or G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5) == G.GAME.interest_amount*G.GAME.interest_cap/5 then'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = '''dollars = dollars + G.GAME.interest_amount*math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5)'''
position = 'at'
payload = '''dollars = dollars + G.GAME.interest_amount*(moneybags and G.GAME.interest_cap/5 or math.min(math.floor(G.GAME.dollars/5), G.GAME.interest_cap/5))'''
match_indent = true



[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
pattern = '''if args.key == '[' or args.key == ']' then return end'''
position = 'at'
payload = '''if (args.key == '[' or args.key == ']') and not hook.config.ref_table.extended_corpus then return end'''
match_indent = true

# why does 0 crash the game why does 0 crash the game why does
# [[patches]]
# [patches.pattern]
# target = 'functions/button_callbacks.lua'
# pattern = '''if args.key == '0' then args.key = 'o' end'''
# position = 'at'
# payload = '''if args.key == '0' and not hook.config.ref_table.extended_corpus then args.key = 'o' end'''
# match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
pattern = '''local corpus = '123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'..(hook.config.ref_table.extended_corpus and " 0!$&()<>?:{}+-=,.[]_" or '')'''
position = 'at'
payload = '''local corpus = '123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'..(hook.config.ref_table.extended_corpus and " 0!$&()<>?:{}+-=,.[]_'" or '')'''
match_indent = true



[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''{n=G.UIT.T, config={text = localize{type = 'variable', key = 'ante_x_voucher', vars = {G.GAME.round_resets.ante}}, scale = 0.45, colour = G.C.L_BLACK, vert = true}},'''
position = 'at'
payload = '''{n=G.UIT.T, config={text = next(SMODS.find_card('j_phanta_theblackraven')) and localize('phanta_theblackraven_blackmarket') or localize{type = 'variable', key = 'ante_x_voucher', vars = {G.GAME.round_resets.ante}}, scale = 0.45, colour = G.C.L_BLACK, vert = true}},'''
match_indent = true