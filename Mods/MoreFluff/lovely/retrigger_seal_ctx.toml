[manifest]
version = "1.0.0"
dump_lua = true
priority = -1

[[patches]]
[patches.pattern]
target = 'card.lua'
match_indent = true
pattern = '''
    if context.discard and context.other_card == self then
        if self.seal == 'Purple' and #G.consumeables.cards + G.GAME.consumeable_buffer < G.consumeables.config.card_limit then
            G.GAME.consumeable_buffer = G.GAME.consumeable_buffer + 1
            G.E_MANAGER:add_event(Event({
                trigger = 'before',
                delay = 0.0,
                func = (function()
                        local card = create_card('Tarot',G.consumeables, nil, nil, nil, nil, nil, '8ba')
                        card:add_to_deck()
                        G.consumeables:emplace(card)
                        G.GAME.consumeable_buffer = 0
                    return true
                end)}))
            card_eval_status_text(self, 'extra', nil, nil, nil, {message = localize('k_plus_tarot'), colour = G.C.PURPLE})
            return nil, true
        end
    end'''
position = 'before'
payload = '''
if not context.retriggered then
  context.retriggered = true

  for i = 1, #G.jokers.cards do
    local eval = nil
    eval = G.jokers.cards[i]:calculate_joker({mf_seal_repetition = true, seal_context = context})
    if eval then
      if eval.repetitions then
        for _ = 1, eval.repetitions do
          card_eval_status_text(G.jokers.cards[i], 'jokers', nil, nil, nil, eval)
          self:calculate_seal(context)
        end
      end
    end
  end
end
'''