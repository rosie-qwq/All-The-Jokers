[manifest]
version = "1.0.0"
dump_lua = true
priority = -1

[[patches]]
[patches.pattern]
target = '''=[SMODS JokerDisplay "src/display_functions.lua"]'''
pattern = """
function JokerDisplay.update_all_joker_display(force_update, force_reload, _from)"""
position = "after"
payload = """if G.consumeables then
    for _, card in pairs(G.consumeables.cards) do
      print("wow!")
      print(card.ability.set)
      if card.ability.set == "Colour" or card.ability.set == "Shape" then
        card:update_joker_display(force_update, force_reload, _from)
      end
    end
  end"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS JokerDisplay "src/config_tab.lua"]'''
pattern = """joker:update_joker_display(false, true, "config_update")"""
position = "after"
payload = """if G.consumeables then
    for _, card in pairs(G.consumeables.cards) do
      print("wow!")
      print(card.ability.set)
      if card.ability.set == "Colour" or card.ability.set == "Shape" then
        card:update_joker_display(false, true, "config_update")
      end
    end
  end"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS JokerDisplay "src/display_functions.lua"]'''
pattern = """
    if self.ability and self.ability.set == 'Joker' then"""
position = "at"
payload = """if self.ability and (self.ability.set == 'Joker' or self.ability.set == 'Colour' or self.ability.set == "Shape") then"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS JokerDisplay "src/display_functions.lua"]'''
pattern = """if JokerDisplay.config.enabled and G.jokers and self.area == G.jokers then"""
position = "at"
payload = """if JokerDisplay.config.enabled and ((G.jokers and self.area == G.jokers) or (G.consumeables and self.area == G.consumeables)) then"""
overwrite = true
match_indent = false