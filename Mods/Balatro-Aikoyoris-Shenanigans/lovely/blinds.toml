[manifest]
version = "1.2"
dump_lua = true
priority = 0


# i personally think this makes way more sense than it checking if itself is a boss
# as it is not going to matter where the boss blind could appear
# as there is in fact a challenge of mine that will need it
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.blind:get_type() == 'Boss' then"
position = "at"
payload = "if G.GAME.blind_on_deck == 'Boss' then"
match_indent = true

# vanilla
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = """                        if G.GAME.round_resets.blind == G.P_BLINDS.bl_small then
                            G.GAME.round_resets.blind_states.Small = 'Defeated'"""
position = "before"
payload = "if G.GAME.akyrs_default_blind_handler then"
match_indent = true
# cryptid 
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = """                        if G.GAME.blind_on_deck == 'Small' then
                            G.GAME.round_resets.blind_states.Small = 'Defeated'"""
position = "before"
payload = "if G.GAME.akyrs_default_blind_handler then"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = """if G.GAME.round_resets.temp_handsize then G.hand:change_size(-G.GAME.round_resets.temp_handsize); G.GAME.round_resets.temp_handsize = nil end"""
position = "before"
payload = """else
    AKYRS.blind_handler()
end"""
match_indent = true
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = """            if G.GAME.round_resets.ante == G.GAME.win_ante and G.GAME.blind:get_type() == 'Boss' then"""
position = "at"
payload = """            if G.GAME.round_resets.ante == G.GAME.win_ante and G.GAME.blind_on_deck == 'Boss' then"""
match_indent = true