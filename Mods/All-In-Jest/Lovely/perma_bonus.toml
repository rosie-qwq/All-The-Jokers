[manifest]
version = "1.0.0"
dump_lua = true
priority = 214748364

# Merge with smods at some point
# generate_card_ui(): show permanent bonuses on default playing cards
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif _c.set == 'Enhanced' then"
position = "before"
payload = '''
if specific_vars and specific_vars.bonus_retriggers then
    localize{type = 'other', key = 'card_extra_retriggers', nodes = desc_nodes, vars = {specific_vars.bonus_retriggers}}
end'''
match_indent = true
overwrite = false

# generate_card_ui(): show permanent bonuses on enhanced playing cards
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif _c.set == 'Booster' then"
position = "before"
payload = '''
if specific_vars and specific_vars.bonus_retriggers then
    localize{type = 'other', key = 'card_extra_retriggers', nodes = desc_nodes, vars = {specific_vars.bonus_retriggers}}
end'''
match_indent = true
overwrite = false

# generate_UIBox_ability_table(): prime specific_vars for playing cards
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "bonus_h_dollars = self.ability.perma_h_dollars ~= 0 and self.ability.perma_h_dollars or nil,"
position = "before"
payload = '''
bonus_retriggers = self.ability.perma_retriggers ~= 0 and self.ability.perma_retriggers or nil,'''
match_indent = true
overwrite = false

# set_ability: set defaults for permanent bonuses
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "perma_bonus = self.ability and self.ability.perma_bonus or 0,"
position = "after"
payload = '''
perma_retriggers = self.ability and self.ability.perma_retriggers or 0,
'''
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = 'function Card:get_edition()'
position = "before"
match_indent = true
payload = '''
function Card:get_perma_retriggers()
    if self.debuff then return 0 end
    local ret = self.ability.perma_retriggers or 0
    -- TARGET: get_perma_retriggers
    return ret
end
'''

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '-- TARGET: main scoring on played cards'
position = "before"
match_indent = true
payload = '''
local perma_retriggers = card:get_perma_retriggers()
if perma_retriggers ~= 0 then
    ret.playing_card.perma_retriggers = perma_retriggers
end
'''

[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = "-- TARGET: evaluate your own repetition effects"
position = "before"
payload = '''
if card.ability.perma_retriggers ~= nil and card.ability.perma_retriggers > 0 then
    ret.perma_retriggers = {
        repetitions = card.ability.perma_retriggers,
        card = card,
        message = localize('k_again_ex')
    }
end
'''
match_indent = true 