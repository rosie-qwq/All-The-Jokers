[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Singular Sticker functionality

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if v.eternal then _joker:set_eternal(true) end"
position = "after"
match_indent = true
payload = 'if v.singular then _joker.ability.chdp_singular = true end'

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "if v.eternal then card:set_eternal(true) end"
position = "after"
match_indent = true
payload = 'if v.singular then card.ability.chdp_singular = true end'

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if G.GAME.modifiers.enable_eternals_in_shop and eternal_perishable_poll > 0.7 then"
position = "before"
match_indent = true
payload = '''
if G.GAME.modifiers.enable_singulars_in_shop and pseudorandom((area == G.pack_cards and 'packsing' or 'singpoll')..G.GAME.round_resets.ante) > 0.7 then
    card.ability.chdp_singular = true
end
'''

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "local chosen_joker = pseudorandom_element(G.jokers.cards, pseudoseed('ankh_choice'))"
position = "at"
match_indent = true
payload = '''
local possible_jokers = {}
for k, v in ipairs(G.jokers.cards) do
    if not v.ability.chdp_singular then
        possible_jokers[#possible_jokers + 1] = v
    end
end
local chosen_joker = pseudorandom_element(possible_jokers, pseudoseed('ankh_choice'))
'''

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "--if there is at least one joker"
position = "after"
match_indent = true
payload = '''
local usable_jokers = 0
for k, v in pairs(G.jokers.cards) do
    if not v.ability.chdp_singular then
        usable_jokers = usable_jokers + 1
    end
end
if usable_jokers == 0 then
    return false
end
'''

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if G.jokers.cards[i] ~= self then"
position = "at"
match_indent = true
payload = '''
if G.jokers.cards[i] ~= self and not G.jokers.cards[i].ability.chdp_singular then
'''